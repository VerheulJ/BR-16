

entera_experimento <- read_excel("data/entera.xlsx")
sample_metadata<- read_xlsx("data/sample-metadata-alcohol-stress.xlsx")
accesion_experimento<-dplyr::select(entera_experimento, Accession)
gene_ID_experimento<-dplyr::select(entera_experimento, "Gene Symbol")
indice_proteina<-cbind(accesion_experimento,gene_ID_experimento)


ajustado<-read_xlsx("data/ajustado.xlsx")
sample<-read_csv("data/sample-metadata.csv")
alcohol<-read_xlsx("data/Metodo2/alcohol/35/ajustado_efecto_alcohol_BR16_machos.xlsx")

ajustado<-as.data.frame(ajustado)


rownames(ajustado)<-ajustado$...1
ajustado<-ajustado[,-1]
sample_metadata <- as.data.frame(sample)

nombres <- sample_metadata[, 1]
# sample_metadata<-sample_metadata[, -1]
# Ahora, asignar los nombres de fila
rownames(sample_metadata) <- nombres

# seleccionadas<-names(sort(varianza, decreasing = TRUE))[1:50]
desreguladas<-alcohol$Accession

matriz_elegidas<-ajustado[desreguladas,]
matriz_elegidas<-matriz_elegidas[,nombres]

desreguladas_nombres <- indice_proteina[match(rownames(matriz_elegidas), indice_proteina$Accession),]
rownames(matriz_elegidas) <- desreguladas_nombres$`Gene Symbol`
logmatriz_elegidas<-as.data.frame(t(apply(matriz_elegidas, 1, log10)))

# # Ahora, plotear el heatmap
# pheatmap(matriz_elegidas, annotation_col = sample_metadata)
# 
# 
# # Define a custom color palette
# custom_colors <- colorRampPalette(rev(brewer.pal(n = 8, name = "RdYlBu")))(100)



alcohol_stress<-read_xlsx("data/estadistica_entera_experimento_BR16_machos.xlsx")



a<-c(5,6,7)
alcohol_stress<-alcohol_stress[,-a]
alcohol<-alcohol[,-a]


select<-as_vector(alcohol[,1])



alcohol_stress_select <- alcohol_stress[alcohol_stress$Accession %in% select, ]


columnas<-alcohol_stress_select[,(4:5)]

col<-c("log10pvalor_alcohol_stress", "tabla_alcohol_stress_datos.media")
colnames(columnas)<-col

alcohol1<-alcohol[,(1:5)]

alcohol2<-alcohol[,(6:8)]


todo<-cbind(alcohol1, columnas, alcohol2)
todo <- todo[, c(1:4, 6, 5, 7:ncol(todo))]


c<-c(2,6,7,8)

todo_heatmap<-todo[,c]
# 
# 
# # Cargar las anotaciones desde el sample_metadata
# # Asumiendo que has cargado sample_metadata en un dataframe en R similar a Python
# grupo_experimental <- sample_metadata[ , "Treatment", drop=FALSE]
# rownames(grupo_experimental) <- sample_metadata$`sample-id`
# 
# # Paleta de colores para los grupos experimentales
# colors_annotation <- list(Treatment = c("control" = "green", "EtOH" = "red", "EtOH+stress" = "blue"))
# custom_colors <- colorRampPalette(c("blue", "white", "red"))(100)
# 
# # Generar el heatmap con las anotaciones
# pheatmap(
#   as.matrix(logmatriz_elegidas),   # Convertimos el dataframe a matriz
#   color = colorRampPalette(c("blue", "white", "red"))(100),  # Colores para el heatmap
#   main = "Heatmap de Medias por Condiciones",                # Título
#   show_rownames = TRUE,    # Mostrar nombres de las proteínas
#   show_colnames = TRUE,    # Mostrar nombres de las condiciones
#   border_color = NA,       # Sin bordes en las celdas
#   scale = "row",           # Escalado por filas para hacer comparaciones entre proteínas
#   cluster_rows = FALSE,    # No hacer clustering de proteínas
#   cluster_cols = FALSE,     # Hacer clustering de las columnas
#   annotation_col = grupo_experimental,  # Agregar anotaciones de grupo experimental
#   annotation_colors = colors_annotation  # Colores para las anotaciones
# )






c<-c(2,6,7,8)

todo_heatmap<-todo[,c]

rownames(todo_heatmap) <- todo_heatmap$Gene.Symbol
todo_heatmap <- todo_heatmap[, -1]  
d<-c("control", "alcohol", "alcohol+stess")
colnames(todo_heatmap)<-d

todo_heatmap <- todo_heatmap[, c(3,1,2)]

# Definir la ruta donde se guardarán los archivos
ruta_guardado <- "data/Metodo2/"

# Definir los nombres de archivos y dispositivos gráficos correspondientes
formatos <- list(
  tiff = list(extension = ".tif", device = tiff, width = 7.5, height = 7.5, units = "in", res = 600),
  svg = list(extension = ".svg", device = svg, width = 7.5, height = 7.5),
  pdf = list(extension = ".pdf", device = pdf, width = 7.5, height = 7.5)
)


p_alcoholstress<-alcohol_stress_select$log10pvalor_alcohol
p_alcohol<-alcohol$log10pvalor_alcohol


p_values <- data.frame(Alcohol = p_alcohol, AlcoholStress = p_alcoholstress)  # Valores de ejemplo

heatmap_data_with_pval <- cbind(logmatriz_elegidas, Alcohol = p_values$Alcohol, Alcohol_Stress = p_values$AlcoholStress)


# Asignar las anotaciones desde sample_metadata
grupo_experimental <- sample_metadata[ , "Treatment", drop=FALSE]
rownames(grupo_experimental) <- sample_metadata$`sample-id`  # Asegurar que las filas tengan los mismos nombres que en heatmap_data_with_pval

# Crear un dataframe con los nombres de las proteínas y los p-valores
annotation_row <- data.frame(Alcohol = heatmap_data_with_pval[, "Alcohol"],
                             Alcohol_Stress = heatmap_data_with_pval[, "Alcohol_Stress"])

# Modificar p-valores: los menores de 1.3 serán NA
annotation_row$Alcohol[annotation_row$Alcohol < 1.3] <- NA
annotation_row$Alcohol_Stress[annotation_row$Alcohol_Stress < 1.3] <- NA

# Asegurar que los nombres de las filas en el heatmap coincidan con las anotaciones
rownames(annotation_row) <- rownames(heatmap_data_with_pval)

# Paleta de colores para los grupos experimentales
colors_annotation <- list(
  Treatment = c("control" = "green", "EtOH" = "red", "EtOH+stress" = "blue"),
  Alcohol = colorRampPalette(c("yellow", "red"))(50),
  Alcohol_Stress = colorRampPalette(c("yellow", "red"))(50)
)
custom_colors <- colorRampPalette(c("blue", "white", "red"))(100)

# Generar el heatmap visualizando las anotaciones de p-valores y grupos experimentales
tu_grafico<- pheatmap(
  heatmap_data_with_pval[, -c(ncol(heatmap_data_with_pval)-1, ncol(heatmap_data_with_pval))],  # Remover las columnas de p-valores
  annotation_row = annotation_row,  # Agregar los p-valores como anotaciones
  annotation_col = grupo_experimental,  # Añadir los grupos experimentales como anotaciones de columna
  show_rownames = TRUE,  # Mostrar nombres de las proteínas
  show_colnames = TRUE,  # Mostrar nombres de las condiciones
  scale = "row",  # Escalado por filas
  cluster_rows = FALSE,  # No hacer clustering de proteínas
  cluster_cols = FALSE,  # No hacer clustering de columnas
  annotation_colors = colors_annotation,  # Colores para las anotaciones
  color = colorRampPalette(c("blue", "white", "red"))(100),  # Paleta de colores para el heatmap
  display_numbers = FALSE  # No mostrar números en las celdas
)




# Guardar el gráfico Volcano en los formatos deseados
for (formato in names(formatos)) {
  detalles <- formatos[[formato]]
  nombre_archivo <- paste0(ruta_guardado, "HEATMAP_ALCOHOLSTRESS", detalles$extension)
  if (formato == "tiff") {
    detalles$device(file = nombre_archivo, width = detalles$width, height = detalles$height, 
                    units = detalles$units, res = detalles$res)
  } else {
    detalles$device(file = nombre_archivo, width = detalles$width, height = detalles$height)
  }
  print(tu_grafico)
  dev.off()
}
